#include <Windows.h>
#include <iostream>

// Function to recursively scan the Windows registry
void ScanRegistry(HKEY hKey, LPCWSTR subKey)
{
	HKEY hSubKey;
	if (RegOpenKeyEx(hKey, subKey, 0, KEY_READ, &hSubKey) == ERROR_SUCCESS)
	{
		// Enumerate all subkeys
		DWORD index = 0;
		WCHAR subKeyName[255];

		while (RegEnumKey(hSubKey, index, subKeyName, 255) == ERROR_SUCCESS)
		{
			// Process each subkey
			std::wcout << L"Scanning subkey: " << subKeyName << std::endl;

			// Recursively scan subkeys
			std::wstring subKeyPath = std::wstring(subKey) + L"\\" + subKeyName;
			ScanRegistry(hSubKey, subKeyPath.c_str());
			index++;
		}
		RegCloseKey(hSubKey);
	}
}
int main(int argc, char* argv[]) 
{
	// Open the main registry key
	HKEY hKey;
	if (RegOpenKeyEx(HKEY_LOCAL_MACHINE, L"Software", 0, KEY_READ, &hKey) == ERROR_SUCCESS)
	{
		std::wcout << L"Scanning registry for malware..." << std::endl;

		// Start scanning recursively from the SOFTWARE key
		ScanRegistry(HKEY_LOCAL_MACHINE, L"Software");
		
		// Close the main registry key
		RegCloseKey(hKey);
	}
	else
	{
		std::wcout << L"Unable to open registry key." << std::endl;
		return 1;
	}
	return 0;
}